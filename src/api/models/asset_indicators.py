# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from src.api.models.base_model_ import Model
from src.api import util


class AssetIndicators(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, timestamp=None, asset_id=None):  # noqa: E501
        """AssetIndicators - a model defined in OpenAPI

        :param timestamp: The timestamp of this AssetIndicators.  # noqa: E501
        :type timestamp: float
        :param asset_id: The asset_id of this AssetIndicators.  # noqa: E501
        :type asset_id: int
        """
        self.openapi_types = {
            'timestamp': float,
            'asset_id': int
        }

        self.attribute_map = {
            'timestamp': 'timestamp',
            'asset_id': 'assetId'
        }

        self._timestamp = timestamp
        self._asset_id = asset_id

    @classmethod
    def from_dict(cls, dikt) -> 'AssetIndicators':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AssetIndicators of this AssetIndicators.  # noqa: E501
        :rtype: AssetIndicators
        """
        return util.deserialize_model(dikt, cls)

    @property
    def timestamp(self):
        """Gets the timestamp of this AssetIndicators.


        :return: The timestamp of this AssetIndicators.
        :rtype: float
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this AssetIndicators.


        :param timestamp: The timestamp of this AssetIndicators.
        :type timestamp: float
        """

        self._timestamp = timestamp

    @property
    def asset_id(self):
        """Gets the asset_id of this AssetIndicators.


        :return: The asset_id of this AssetIndicators.
        :rtype: int
        """
        return self._asset_id

    @asset_id.setter
    def asset_id(self, asset_id):
        """Sets the asset_id of this AssetIndicators.


        :param asset_id: The asset_id of this AssetIndicators.
        :type asset_id: int
        """

        self._asset_id = asset_id
